name: Release And Upload
on:
  release:
    types:
      - published
jobs:
  build-and-upload:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup pNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 21
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies for Tauri (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Load cached node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install
      - name: Build the app
        run: pnpm tauri build
      - name: (Ubuntu AppImage) Upload Release Asset
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/*/*.AppImage
          asset_name: Linux.AppImage
          asset_content_type: application/octet-stream
      - name: (Ubuntu Deb) Upload Release Asset
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/*/*.deb
          asset_name: Linux.deb
          asset_content_type: application/octet-stream
      - name: (MacOS) Upload Release Asset
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/*/*.dmg
          asset_name: WarriorDashboard.dmg
          asset_content_type: application/x-apple-diskimage
      - name: (Windows) Upload Release Asset
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/*/*.msi
          asset_name: WarriorDashboard.msi
          asset_content_type: application/msi
